# Set rate limit zone 'flood'
limit_req_zone $binary_remote_addr zone=flood:15m rate=5r/s;

# Sets a $real_scheme variable whose value is the scheme passed by the load
# balancer in X-Forwarded-Proto (if any), defaulting to $scheme.
# Similar to how the HttpRealIp module treats X-Forwarded-For.
map $http_x_forwarded_proto $real_scheme {
  default $http_x_forwarded_proto;
  ''      $scheme;
}

# Configure fastcgi cache
fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=pub01:100m inactive=60m;
fastcgi_cache_use_stale updating error timeout invalid_header http_500;
fastcgi_cache_key "$real_scheme$request_method$host$request_uri";

upstream php {
    server unix:/sock/fpm.sock;
}

server {
    listen  8080 default_server; # For default requests.
    server_name localhost;

    root /var/www/html/public;
    index index.php index.html;

    client_max_body_size 250m;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # load modules
    #include /etc/nginx/modules/*.conf;

    ###
    # CUSTOM ERROR PAGES
    ###
    error_page 400 /app/themes/justice/error-pages/400.html;
    error_page 404 /app/themes/justice/error-pages/404.html;
    error_page 500 /app/themes/justice/error-pages/500.html;
    error_page 503 /app/themes/justice/error-pages/maintenance.html;

    location /app/themes/justice/error-pages/401.html {
      allow all;
    }

    location /app/themes/justice/error-pages/403.html {
      allow all;
    }

    # Empty location blocks to allow access when "/" location
    # sends an HTTP 503 during maintenance mode
    location /app/themes/justice/error-pages/ { }
    location /app/themes/justice/dist/ { }

    # Rewrite old upload URLs to the bedrock equivalent
    location /wp-content/uploads/ {
        rewrite ^/wp-content/uploads/(.*)$ /app/uploads/$1 permanent;
    }

    ##
    # CACHING
    ##
    # Cache the request, unless...
    set $skip_cache 0;

    # ...it's a POST request
    if ($request_method = POST) {
        set $skip_cache 1;
    }

    # ...there are query string parameters
    if ($query_string != "") {
        set $skip_cache 1;
    }

    # ...it's for a special WordPress URL which should not be cached (including wp-admin)
    if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
        set $skip_cache 1;
    }

    # ...it's from a logged in user, or the cookie 'wordpress_no_cache' exists
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $skip_cache 1;
    }

    location ~ /purge-cache(/.*) {
        fastcgi_cache_purge pub01 "$real_scheme$request_method$host$1";
    }

    location / {
        # First attempt to serve request as file, then
        # as a directory, then pass the request to
        # WordPress's front controller.
        try_files $uri $uri/ /index.php?$args;
    }

    # deny access to dotfiles accept .well-known
    # this will deny access to .git, .htaccess, .env, and other sensitive files
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }

    # Deny access to load-scripts.php and load-styles.php to prevent DoS attacks.
    # These are endpoints used by php to concatenate scripts and styles.
    # We're serving these with nginx instead.
    location ~* ^/wp/wp-admin/load-(?:scripts|styles)\.php$ {
        deny all;
    }

    # WordPress admin rate limit
    location = /wp/wp-login.php {
        limit_req zone=flood burst=5 nodelay;
        include /etc/nginx/php-fpm.conf;
        fastcgi_pass php;
    }

    location ~ \.php$ {
        include /etc/nginx/php-fpm.conf;
        fastcgi_pass php;
    }

	location = /robots.txt { access_log off; log_not_found off; }
}
