apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${KUBE_NAMESPACE}
  namespace: ${KUBE_NAMESPACE}
  labels:
    app: ${KUBE_NAMESPACE}
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  selector:
    matchLabels:
      app: ${KUBE_NAMESPACE}
  template:
    metadata:
      labels:
        app: ${KUBE_NAMESPACE}
    spec:
      volumes:
        - name: php-socket
          emptyDir: { }
      terminationGracePeriodSeconds: 35
      serviceAccountName: ${KUBE_NAMESPACE}-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        seccompProfile:
          type: "RuntimeDefault"
      containers:
        - name: nginx
          image: ${ECR_URL}:${IMAGE_TAG_NGINX}
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: php-socket
              mountPath: /sock
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: 
              drop: ["ALL"]
          resources:
            limits:
              cpu: 500m
              memory: 200Mi
            requests:
              cpu: 500m
              memory: 200Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: 8080

        - name: fpm
          image: ${ECR_URL}:${IMAGE_TAG_FPM}
          volumeMounts:
            - name: php-socket
              mountPath: /sock
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: 
              drop: ["ALL"]
            readOnlyRootFilesystem: true
          resources:
            limits:
              cpu: 1000m
              memory: 500Mi
            requests:
              cpu: 600m
              memory: 500Mi
          # Check frequently during startup, so that scaling up can happen as fast as possible.
          startupProbe:
            exec:
              command:
              - /usr/local/bin/fpm-health/fpm-readiness.sh
            failureThreshold: 20
            periodSeconds: 5
          # Don't route traffic to this pod if the container is not ready.
          readinessProbe:
            exec:
              command:
              - /usr/local/bin/fpm-health/fpm-readiness.sh
            periodSeconds: 10
            failureThreshold: 1
          # Restart the container if it fails liveness script.
          livenessProbe:
            exec:
              command:
              - /usr/local/bin/fpm-health/fpm-liveness.sh
            periodSeconds: 10
          env:
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: s3-bucket-output
                  key: bucket_name
            - name: CLOUDFRONT_URL
              valueFrom:
                secretKeyRef:
                  name: cloudfront-output
                  key: cloudfront_url
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: rds-output
                  key: rds_instance_address
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: rds-output
                  key: database_name
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: rds-output
                  key: database_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rds-output
                  key: database_password
            - name: CACHE_HOST
              valueFrom:
                secretKeyRef:
                  name: elasticache-output
                  key: primary_endpoint_address
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticache-output
                  key: auth_token
          envFrom:
            - configMapRef:
                name: ${KUBE_NAMESPACE}
            - secretRef:
                name: ${KUBE_NAMESPACE}-secrets
