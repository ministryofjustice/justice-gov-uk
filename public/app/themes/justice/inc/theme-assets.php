<?php

namespace MOJ\Justice;

if (!defined('ABSPATH')) {
    exit;
}

/**
 * A php class related to theme assets.
 */

class ThemeAssets
{
    public function __construct()
    {
        $this->addHooks();
    }


    public function addHooks() : void
    {
        // add_action('wp_enqueue_scripts', [$this, 'loadStyles']);
        add_action('wp_enqueue_scripts', [$this, 'loadScripts']);
        add_action('wp_enqueue_scripts', [$this, 'loadFrontendAssets']);
        add_action('wp_default_scripts', [$this, 'removeJqueryMigrate']);
    }


    /**
     * Load the frontend assets.
     *
     * This file reads the manifest from the standalone frontend build.
     * It is expected that the manifest file is generated by the build process.
     *
     * If the file does not exist, an error is thrown.
     * If the file does not contain the expected entries, an error is thrown.
     *
     * CSS and JS files are enqueued with their respective versions.
     *
     * @throws \Error if the manifest file does not exist or does not contain the expected entries.
     * @return void
     */
    public function loadFrontendAssets(): void
    {
        $frontend_manifest_path = WP_CONTENT_DIR . '/frontend/dist/manifest.json';

        if (!file_exists($frontend_manifest_path)) {
            throw new \Error(
                'You need to run the watch or build script for "app/frontend" first.'
            );
        }

        // Read the manifest file and decode it.
        $frontend_assets = json_decode(file_get_contents($frontend_manifest_path), true);

        // Check if the manifest was decoded successfully.
        if (json_last_error() !== JSON_ERROR_NONE) {
            throw new \Error(
                'The manifest file is not valid JSON: ' . json_last_error_msg()
            );
        }

        // Check if the manifest contains the expected entries.
        if (!$frontend_assets['main.css']) {
            throw new \Error(
                'The manifest file does not contain the expected "main.css" entry.'
            );
        }

        if (!$frontend_assets['main.js']) {
            throw new \Error(
                'The manifest file does not contain the expected "main.js" entry.'
            );
        }

        // Parse the filenames and versions from $frontend_assets
        [$css_file, $css_version] = explode('?ver=', $frontend_assets['main.css']);
        [$js_file, $js_version] = explode('?ver=', $frontend_assets['main.js']);

        // Enqueue the styles and scripts using the parsed filenames and versions.
        wp_enqueue_style(
            'justice-frontend-styles',
            home_url('/app/frontend/dist/' . $css_file),
            [],
            $css_version
        );

        wp_enqueue_script(
            'justice-frontend-script',
            home_url('/app/frontend/dist/' . $js_file),
            [],
            $js_version,
            true
        );
    }

    /**
     * Load the main app styles.
     *
     * @return void
     */
    public function loadStyles(): void
    {
        // Legacy
        // wp_enqueue_style('justice-styles', get_template_directory_uri() . '/dist/css/app.min.css');
    }

    /**
     * Load the main app script.
     *
     * This is also the best place to load any other scripts that are needed on every page.
     * After wp_register_script, localise_script can be used to pass data to the script if necessary.
     *
     * @return void
     */
    public function loadScripts(): void
    {
        // Legacy
        // TODO - review and remove if unused.
        $script_asset_path = get_template_directory() . "/dist/php/app.min.asset.php";

        if (!file_exists($script_asset_path)) {
            throw new \Error(
                'You need to run `npm start` or `npm run build` for "app" first.'
            );
        }

        $script_asset = require($script_asset_path);
        wp_register_script(
            'moj-justice-app',
            get_template_directory_uri() . '/dist/app.min.js',
            $script_asset['dependencies'],
            $script_asset['version']
        );

        wp_enqueue_script('moj-justice-app');
    }

    /**
     * Remove the unnecessary jquery migrate script.
     *
     * @param object $scripts
     * @return void
     */
    public function removeJqueryMigrate($scripts): void
    {
        if (! is_admin() && isset($scripts->registered['jquery'])) {
            $script = $scripts->registered['jquery'];

            if ($script->deps) {
                // Check whether the script has any dependencies
                $script->deps = array_diff($script->deps, array( 'jquery-migrate' ));
            }
        }
    }
}
